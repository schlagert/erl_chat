%%%=============================================================================
%%%
%%%               |  o __   _|  _  __  |_   _       _ _   (TM)
%%%               |_ | | | (_| (/_ | | |_) (_| |_| | | |
%%%
%%% @author Sven Heyll <sven.heyll@lindenbaum.eu>
%%% @author Timo Koepke <timo.koepke@lindenbaum.eu>
%%% @author Tobias Schlager <tobias.schlager@lindenbaum.eu>
%%% @copyright (C) 2016, Lindenbaum GmbH
%%%
%%% @doc
%%% @end
%%%=============================================================================

-module(chat).

-behaviour(application).
-behaviour(supervisor).

%% API
-export([id/0]).

%% Application callbacks
-export([start/2, stop/1]).

%% supervisor callbacks
-export([init/1]).

%%%=============================================================================
%%% API
%%%=============================================================================

%%------------------------------------------------------------------------------
%% @doc
%% Return a globally unique identifier. Currently based on a 128-bit version
%% 4 UUID according to RFC 4122 using Wichmann-Hill 2006.
%% @end
%%------------------------------------------------------------------------------
-spec id() -> binary().
id() -> uuid:uuid_to_string(uuid:get_v4_urandom(), binary_standard).

%%%=============================================================================
%%% Application callbacks
%%%=============================================================================

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
start(_StartType, _StartArgs) -> supervisor:start_link(?MODULE, []).

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
stop(_State) -> ok.

%%%=============================================================================
%%% supervisor callbacks
%%%=============================================================================

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
init([]) ->
    {ok, ParticipantPaths} = chat_participant:init(),
    {ok, RoomPaths} = chat_room:init(),
    {ok, _} = cowboy_init(ParticipantPaths ++ RoomPaths),
    {ok, {{one_for_one, 5, 1}, []}}.

%%%=============================================================================
%%% Internal functions
%%%=============================================================================

%%------------------------------------------------------------------------------
%% @private
%%------------------------------------------------------------------------------
cowboy_init(Paths) ->
    Dispatch = cowboy_router:compile([{'_', Paths}]),
    Env = #{env => #{dispatch => Dispatch}},
    cowboy:start_clear(http, 100, [{port, 8080}], Env).
